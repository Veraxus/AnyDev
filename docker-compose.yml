services:

  # DNS Resolver (Required)
  dnsmasq:
    image: 4km3/dnsmasq:2.85-r2
    container_name: anydev-dnsmasq
    restart: unless-stopped
    cap_add:
      - NET_ADMIN
    command:
      - "--log-debug"
      - "--log-facility=-"
      - "--server=8.8.8.8" # Use Google DNS by default
      - "--server=8.8.4.4" # Use Google DNS by default
      - "--address=/site.test/127.0.0.1"
    ports:
      - "53:53/tcp"
      - "53:53/udp"
    networks:
      - anydev

  # Reverse Proxy (required)
  traefik:
    image: traefik:v2.9
    container_name: anydev-traefik
    restart: unless-stopped
    command:
      - "--configFile=/traefik.static.yml"
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ${HOME}/.anydev/certs:/certs:ro
      - ./services/traefik.static.yml:/traefik.static.yml:ro
      - ./services/traefik.dynamic.yml:/traefik.dynamic.yml:ro
    networks:
      - anydev

  # ===========================================
  # Profile-Specific Services
  # ===========================================

  # Databases
  mysql:
    image: mysql:8
    container_name: anydev-mysql
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
    volumes:
      - ${HOME}/.anydev/mysql:/var/lib/mysql
    networks:
      - anydev
    labels:
      - type=db
      - type=relational-db
    profiles:
      - mysql
      - lamp

  postgres:
    image: postgres:13
    container_name: anydev-postgres
    restart: unless-stopped
    environment:
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - ${HOME}/.anydev/postgresql:/var/lib/postgresql/data
    networks:
      - anydev
    labels:
      - type=db
      - type=relational-db
    profiles:
      - postgres

  mongo:
    image: mongo:8.0
    container_name: anydev-mongo
    restart: unless-stopped
    volumes:
      - ${HOME}/.anydev/mongodb:/data/db
    networks:
      - anydev
    labels:
      - type=db
      - type=nosql
    profiles:
      - mongo

# Caches
  redis:
    image: redis:7
    container_name: anydev-redis
    restart: unless-stopped
    networks:
      - anydev
    labels:
      - type=caching
      - type=kvs
    profiles:
      - redis

  memcached:
    image: memcached:1.6
    container_name: anydev-memcached
    restart: unless-stopped
    networks:
      - anydev
    labels:
      - type=caching
      - type=kvs
    profiles:
      - memcached

# TODO: elasticsearch
# TODO: mariadb
# TODO: selenium
# TODO: Prometheus, Grafana++?
# TODO: Kibana?
# TODO: rabbitmq?
# TODO: smtp/email catching?
# TODO: HC Vault?

networks:
  anydev:
    name: anydev
    driver: bridge
